name: Android CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode google-services.json (Linux)
        env:
          GOOGLE_SERVICES_JSON_BASE64: ${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}
        run: |
          echo "Creating google-services.json for Linux runner"
          # Define the target path for google-services.json
          # The Google Services plugin usually expects it in app/google-services.json
          FILE_PATH="app/google-services.json"
          
          # Create the directory if it doesn't exist
          mkdir -p "$(dirname "$FILE_PATH")" # Ensures directory for the file exists

          echo "Writing google-services.json to $FILE_PATH"
          echo $GOOGLE_SERVICES_JSON_BASE64 | base64 --decode > $FILE_PATH
          echo "google-services.json created successfully."
          # Optional: Verify file content for debugging (uncomment if needed)
          # echo "File content verification:"
          # cat $FILE_PATH

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8"
        run: ./gradlew build

      - name: Run unit tests
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g -Dfile.encoding=UTF-8"
        run: ./gradlew testDebugUnitTest
        # (e.g., testReleaseUnitTest, test)

    # Optional: Upload build artifacts (e.g., APK)
    # - name: Upload APK
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: app-debug
    #     path: app/build/outputs/apk/debug/app-debug.apk # Adjust path as needed

    # Optional: Upload test reports
    # - name: Upload test reports
    #   if: always() # Always run this step to upload reports even if tests fail
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: unit-test-reports
    #     path: app/build/reports/tests/testDebugUnitTest/ # Adjust path as needed
